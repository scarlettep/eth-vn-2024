/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IUniswapV3Oracle,
  IUniswapV3OracleInterface,
} from "../../../contracts/uniswap/IUniswapV3Oracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getNFTAmounts",
    outputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_fee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "_amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_quoteToken",
        type: "address",
      },
    ],
    name: "getTWAPQuoteNft",
    outputs: [
      {
        internalType: "uint256",
        name: "_quoteAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_gasEstimate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IUniswapV3Oracle__factory {
  static readonly abi = _abi;
  static createInterface(): IUniswapV3OracleInterface {
    return new Interface(_abi) as IUniswapV3OracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IUniswapV3Oracle {
    return new Contract(address, _abi, runner) as unknown as IUniswapV3Oracle;
  }
}
